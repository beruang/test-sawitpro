# This is the OpenAPI specification for your service. It is used to generate the client code.
# To generate the server code, use the Gradle task `openApiGenerate`. The 
# generated code will be placed in `build/generate-resources/main`.
#
# We will evaluate you based on how well you design your API.
# 1. How well it follows REST principles.
# 2. How easy it is to understand and use.
#
# References
# 1. https://swagger.io/specification/
openapi: "3.0.0"
info:
  version: 1.0.0
  title: User Service
  license:
    name: MIT
servers:
  - url: http://localhost
paths:
  /register:
    post:
      tags:
        - Register
      summary: This will handle process user registration.
      operationId: register
      requestBody:
        description: User data to register
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
        required: true
      responses:
        '200':
          description: Successful register users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationResponse'
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /login:
    post:
      tags:
        - Login
      summary: This will handle user login
      operationId: login
      requestBody:
        description: User credential to login
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          description: Successful login user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '404':
          description: Unregistered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /profile:
    get:
      tags:
        - Profile
      summary: This will handle get user information
      operationId: profile
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: Successful getting user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
        '403':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Profile
      summary: This will handle update user information
      operationId: updateProfile
      security:
        - bearerAuth: [ ]
      requestBody:
        description: Data user to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRequest'
        required: true
      responses:
        '200':
          description: Successful update user information
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Duplicate phone number
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    HelloResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    RegistrationRequest:
      type: object
      required:
        - full_name
        - phone
        - password
      properties:
        full_name:
          type: string
        phone:
          type: string
        password:
          type: string
    RegistrationResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
    LoginRequest:
      type: object
      required:
        - phone
        - password
      properties:
        phone:
          type: string
        password:
          type: string
    LoginResponse:
      type: object
      required:
        - id
        - token
      properties:
        id:
          type: integer
        token:
          type: string
    ProfileResponse:
      type: object
      required:
        - full_name
        - phone
      properties:
        full_name:
          type: string
        phone:
          type: string
    UpdateRequest:
      type: object
      required:
        - full_name
        - phone
      properties:
        full_name:
          type: string
        phone:
          type: string